# Generated by Django 3.1.3 on 2021-01-12 18:57

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django_cryptography.fields
import extras.utils


def rename_jobresults(apps, schema_editor):
    """
    Rename CustomJob-associated JobResult records from "module_name.ClassName" to "local/module_name/ClassName".
    """
    CustomJob = apps.get_model('extras', 'CustomJob')
    JobResult = apps.get_model('extras', 'JobResult')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    custom_job_content_type = ContentType.objects.get_for_model(CustomJob)

    for job_result in JobResult.objects.filter(obj_type=custom_job_content_type):
        # Old name: module.ClassName
        # New name: local/module/ClassName
        module_name, class_name = job_result.name.split(".", 1)
        job_result.name = f"local/{module_name}/{class_name}"

        job_result.save()


class Migration(migrations.Migration):

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        ('extras', '0054_customjob'),
    ]

    operations = [
        migrations.AddField(
            model_name='configcontext',
            name='owner_content_type',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to=extras.utils.FeatureQuery('config_context_owners'), null=True, on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='configcontext',
            name='owner_object_id',
            field=models.PositiveIntegerField(blank=True, default=None, null=True),
        ),
        migrations.AddField(
            model_name='exporttemplate',
            name='owner_content_type',
            field=models.ForeignKey(blank=True, default=None, limit_choices_to=extras.utils.FeatureQuery('export_template_owners'), null=True, on_delete=django.db.models.deletion.CASCADE, related_name='export_template_owners', to='contenttypes.contenttype'),
        ),
        migrations.AddField(
            model_name='exporttemplate',
            name='owner_object_id',
            field=models.PositiveIntegerField(blank=True, default=None, null=True),
        ),
        migrations.AlterField(
            model_name='configcontext',
            name='name',
            field=models.CharField(max_length=100),
        ),
        migrations.AlterUniqueTogether(
            name='configcontext',
            unique_together={('name', 'owner_content_type', 'owner_object_id')},
        ),
        migrations.AlterUniqueTogether(
            name='exporttemplate',
            unique_together={('content_type', 'name', 'owner_content_type', 'owner_object_id')},
        ),
        migrations.CreateModel(
            name='GitRepository',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
                ('created', models.DateField(auto_now_add=True, null=True)),
                ('last_updated', models.DateTimeField(auto_now=True, null=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('slug', models.SlugField(max_length=100, unique=True)),
                ('remote_url', models.URLField(max_length=255, validators=[django.core.validators.URLValidator(schemes=['http', 'https'])])),
                ('branch', models.CharField(default='main', max_length=64)),
                ('_token', django_cryptography.fields.encrypt(models.CharField(blank=True, default='', max_length=200))),
                ('provided_contents', models.JSONField(blank=True, default=list)),
                ('current_head', models.CharField(blank=True, default='', max_length=48)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'Git repository',
                'verbose_name_plural': 'Git repositories',
            },
        ),
        migrations.AlterModelOptions(
            name='jobresult',
            options={'ordering': ['-created']},
        ),
        migrations.RunPython(
            code=rename_jobresults,
        ),
    ]
