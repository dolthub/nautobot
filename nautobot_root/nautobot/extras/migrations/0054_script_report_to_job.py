# Generated by Django 3.1.3 on 2020-12-03 17:30

from django.db import migrations, models


def migrate_jobresults(apps, schema_editor):
    """
    Migrate JobResult records from Report/Script ContentType to Job ContentType.
    """
    Report = apps.get_model('extras', 'Report')
    Script = apps.get_model('extras', 'Script')
    Job = apps.get_model('extras', 'Job')
    JobResult = apps.get_model('extras', 'JobResult')
    ContentType = apps.get_model('contenttypes', 'ContentType')

    report_content_type = ContentType.objects.get_for_model(Report)
    script_content_type = ContentType.objects.get_for_model(Script)
    job_content_type = ContentType.objects.get_for_model(Job)

    # For Report result objects, transform the result data to the new format
    # This just entails adding an empty "output" key and the "total" dictionary to the result
    for job_result in JobResult.objects.filter(obj_type=report_content_type):
        job_result.obj_type = job_content_type
        if job_result.data:
            totals = {
                'success': 0,
                'info': 0,
                'warning': 0,
                'failure': 0,
            }
            for test_results in job_result.data.values():
                for key in ('success', 'info', 'warning', 'failure'):
                    totals[key] += test_results[key]
            job_result.data["output"] = ""
            job_result.data["total"] = totals
        job_result.save()

    # For Script result objects, transform the result data to the new format
    # Old: {"log": [{"status": "success", "message": "..."}, ...], "output": "..."}
    # New: {"run": {"log": [(time, status, object, url, message), ...], "output": "...", "total": {...}}}
    for job_result in JobResult.objects.filter(obj_type=script_content_type):
        job_result.obj_type = job_content_type
        if job_result.data:
            new_data = {
                "run": {
                    'success': 0,
                    'info': 0,
                    'warning': 0,
                    'failure': 0,
                    'log': [],
                },
                "total": {
                    'success': 0,
                    'info': 0,
                    'warning': 0,
                    'failure': 0,
                },
                "output": job_result.data.get('output', ""),
            }
            for log_entry in job_result.data.get("log", []):
                new_data['run']['log'].append((None, log_entry['status'], None, None, log_entry['message']))
                new_data['run'][log_entry['status']] += 1
                new_data['total'][log_entry['status']] += 1
            job_result.data = new_data
        job_result.save()


class Migration(migrations.Migration):

    dependencies = [
        ('extras', '0053_rename_webhook_obj_type'),
    ]

    operations = [
        migrations.CreateModel(
            name='Job',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False)),
            ],
            options={
                'managed': False,
            },
        ),
        migrations.RunPython(
            code=migrate_jobresults,
        ),
        migrations.DeleteModel(
            name='Report',
        ),
        migrations.DeleteModel(
            name='Script',
        ),
    ]
